#!/bin/bash

# üöÄ Cinema Paradise Simple Deployment Script
# –ü—Ä–æ—Å—Ç–æ–π –¥–µ–ø–ª–æ–π –Ω–∞ VPS –±–µ–∑ Docker

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üé¨ Cinema Paradise - Simple Deployment"
echo "======================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v python3 &> /dev/null; then
        error "Python3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    fi
    
    if ! command -v nginx &> /dev/null; then
        warn "Nginx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
    fi
    
    log "‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ ! -f ".env.production" ]; then
        warn "–§–∞–π–ª .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        echo "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.production –Ω–∞ –æ—Å–Ω–æ–≤–µ env.production.example"
        echo "cp env.production.example .env.production"
        echo "–ó–∞—Ç–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env.production"
        exit 1
    fi
    
    log "‚úÖ –§–∞–π–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
backup_data() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö..."
    
    BACKUP_DIR="backups/$(date +'%Y%m%d_%H%M%S')"
    mkdir -p "$BACKUP_DIR"
    
    if [ -f "../data/cinema_v2.db" ]; then
        cp "../data/cinema_v2.db" "$BACKUP_DIR/"
        log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ $BACKUP_DIR"
    fi
    
    if [ -d "ssl" ]; then
        cp -r ssl "$BACKUP_DIR/"
        log "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
stop_services() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Python API
    pkill -f "python.*stable_api.py" || true
    pkill -f "python.*cinema_api" || true
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–æ–≤
    pkill -f "python.*http.server.*3000" || true
    pkill -f "python.*http.server.*3002" || true
    
    log "‚úÖ –°—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_deps() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
    
    cd ..
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if [ ! -d "venv" ]; then
        python3 -m venv venv
        log "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
    fi
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    source venv/bin/activate
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    pip install --upgrade pip
    pip install -r requirements.txt
    
    log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
setup_nginx() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
    
    if command -v nginx &> /dev/null; then
        sudo cp nginx/nginx.conf /etc/nginx/sites-available/cinema-paradise
        sudo ln -sf /etc/nginx/sites-available/cinema-paradise /etc/nginx/sites-enabled/
        sudo nginx -t && sudo systemctl reload nginx
        log "‚úÖ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        warn "Nginx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É"
    fi
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start_services() {
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    cd ..
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    source venv/bin/activate
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ -f "deployment/.env.production" ]; then
        export $(cat deployment/.env.production | grep -v '^#' | xargs)
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º API –≤ —Ñ–æ–Ω–µ
    nohup python stable_api.py > logs/api.log 2>&1 &
    API_PID=$!
    echo $API_PID > deployment/api.pid
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ —Ñ–æ–Ω–µ
    cd frontend
    nohup python -m http.server 3000 > ../logs/frontend.log 2>&1 &
    FRONTEND_PID=$!
    echo $FRONTEND_PID > ../deployment/frontend.pid
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–µ
    cd ../mobile_app
    nohup python -m http.server 3002 --bind 0.0.0.0 > ../logs/mobile.log 2>&1 &
    MOBILE_PID=$!
    echo $MOBILE_PID > ../deployment/mobile.pid
    
    cd ..
    
    log "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
    log "API PID: $API_PID"
    log "Frontend PID: $FRONTEND_PID" 
    log "Mobile PID: $MOBILE_PID"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
health_check() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
    
    sleep 10  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    if curl -f http://localhost:8000/health > /dev/null 2>&1; then
        log "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000"
    else
        warn "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    if curl -f http://localhost:3000 > /dev/null 2>&1; then
        log "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    else
        warn "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if curl -f http://localhost:3002 > /dev/null 2>&1; then
        log "‚úÖ Mobile app —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3002"
    else
        warn "‚ùå Mobile app –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3002"
    fi
}

# –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo ""
    echo -e "${BLUE}üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo "================================"
    echo ""
    echo "üîó API: http://localhost:8000/docs"
    echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000"
    echo "üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:3002"
    echo ""
    echo "üìÇ –õ–æ–≥–∏:"
    echo "  API: logs/api.log"
    echo "  Frontend: logs/frontend.log"  
    echo "  Mobile: logs/mobile.log"
    echo ""
    echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  ./stop.sh                        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  tail -f logs/api.log            # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ API"
    echo "  ps aux | grep python            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo ""
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
setup_logs() {
    mkdir -p logs
    mkdir -p backups
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    cd "$(dirname "$0")"
    
    setup_logs
    check_dependencies
    check_env
    backup_data
    stop_services
    install_deps
    setup_nginx
    start_services
    health_check
    show_status
}

# –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
if main "$@"; then
    log "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
else
    error "üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ!"
fi 