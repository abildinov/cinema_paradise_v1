#!/bin/bash

# üíæ Cinema Paradise Backup Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

set -e

echo "üíæ Cinema Paradise - Backup"
echo "=========================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BACKUP_DIR="backups"
DATE=$(date +'%Y%m%d_%H%M%S')
BACKUP_NAME="cinema_paradise_$DATE"
RETENTION_DAYS=30

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
create_backup_dir() {
    mkdir -p "$BACKUP_DIR/$BACKUP_NAME"
    log "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–∞: $BACKUP_DIR/$BACKUP_NAME"
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
backup_database() {
    log "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    if [ -f "../data/cinema_v2.db" ]; then
        cp "../data/cinema_v2.db" "$BACKUP_DIR/$BACKUP_NAME/"
        log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞"
    else
        warn "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
backup_config() {
    log "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–±–µ–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤)
    if [ -f ".env.production" ]; then
        grep -v "PASSWORD\|SECRET\|KEY" .env.production > "$BACKUP_DIR/$BACKUP_NAME/env.backup" || true
        log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ (–±–µ–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤)"
    fi
    
    # Docker compose —Ñ–∞–π–ª—ã
    cp docker-compose.production.yml "$BACKUP_DIR/$BACKUP_NAME/"
    cp -r nginx "$BACKUP_DIR/$BACKUP_NAME/"
    cp -r monitoring "$BACKUP_DIR/$BACKUP_NAME/"
    
    log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
backup_ssl() {
    log "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    
    if [ -d "ssl" ]; then
        cp -r ssl "$BACKUP_DIR/$BACKUP_NAME/"
        log "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
    else
        warn "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤
backup_logs() {
    log "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤..."
    
    mkdir -p "$BACKUP_DIR/$BACKUP_NAME/logs"
    
    # Docker –ª–æ–≥–∏
    docker-compose -f docker-compose.production.yml logs --no-color > "$BACKUP_DIR/$BACKUP_NAME/logs/docker.log" 2>/dev/null || true
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ nginx
    if [ -d "/var/log/nginx" ]; then
        sudo cp /var/log/nginx/access.log "$BACKUP_DIR/$BACKUP_NAME/logs/" 2>/dev/null || true
        sudo cp /var/log/nginx/error.log "$BACKUP_DIR/$BACKUP_NAME/logs/" 2>/dev/null || true
    fi
    
    log "‚úÖ –õ–æ–≥–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
create_archive() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞..."
    
    cd "$BACKUP_DIR"
    tar -czf "$BACKUP_NAME.tar.gz" "$BACKUP_NAME"
    rm -rf "$BACKUP_NAME"
    
    log "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $BACKUP_DIR/$BACKUP_NAME.tar.gz"
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_old_backups() {
    log "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (—Å—Ç–∞—Ä—à–µ $RETENTION_DAYS –¥–Ω–µ–π)..."
    
    find "$BACKUP_DIR" -name "cinema_paradise_*.tar.gz" -mtime +$RETENTION_DAYS -delete 2>/dev/null || true
    
    log "‚úÖ –°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã —É–¥–∞–ª–µ–Ω—ã"
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –æ–±–ª–∞–∫–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
upload_to_cloud() {
    if [ -n "$BACKUP_S3_BUCKET" ] && command -v aws &> /dev/null; then
        log "–ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3..."
        aws s3 cp "$BACKUP_DIR/$BACKUP_NAME.tar.gz" "s3://$BACKUP_S3_BUCKET/cinema-paradise/"
        log "‚úÖ –ë—ç–∫–∞–ø –∑–∞–≥—Ä—É–∂–µ–Ω –≤ S3"
    fi
    
    if [ -n "$BACKUP_GDRIVE_FOLDER" ] && command -v rclone &> /dev/null; then
        log "–ó–∞–≥—Ä—É–∑–∫–∞ –≤ Google Drive..."
        rclone copy "$BACKUP_DIR/$BACKUP_NAME.tar.gz" "gdrive:$BACKUP_GDRIVE_FOLDER"
        log "‚úÖ –ë—ç–∫–∞–ø –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Google Drive"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –±—ç–∫–∞–ø–∞
check_backup_size() {
    BACKUP_SIZE=$(du -h "$BACKUP_DIR/$BACKUP_NAME.tar.gz" | cut -f1)
    log "üìä –†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: $BACKUP_SIZE"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
    FREE_SPACE=$(df -h "$BACKUP_DIR" | awk 'NR==2 {print $4}')
    log "üíæ –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: $FREE_SPACE"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    cd "$(dirname "$0")"
    
    log "üöÄ –ù–∞—á–∞–ª–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    create_backup_dir
    backup_database
    backup_config
    backup_ssl
    backup_logs
    create_archive
    check_backup_size
    cleanup_old_backups
    upload_to_cloud
    
    log "üéâ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    log "üìÅ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $BACKUP_DIR/$BACKUP_NAME.tar.gz"
}

# –ó–∞–ø—É—Å–∫
main "$@" 